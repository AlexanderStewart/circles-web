{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Component imports.\n\nimport Board from \"./components/Board\";\nimport MySnackbar from \"./components/Snackbar\"; //Logic imports.\n\nimport selectedBeside from \"./logic/checkBeside.js\";\nimport selectedNums from \"./logic/selectedNums.js\"; //Style imports.\n\nimport \"./style/app.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport { myColors } from \"./style/colors.js\";\nimport \"./style/fontawesome.min.css\"; //Package imports.\n\nimport Confetti from \"react-confetti\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n    var snackBarOpen = false;\n    var finalLevel = 20;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti,\n      snackBarOpen: snackBarOpen,\n      finalLevel: finalLevel,\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions); //Initializing if values are undefined.\n\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n\n    if (!localStorage.getItem(\"highestLevelAchieved\")) {\n      localStorage.setItem(\"highestLevelAchieved\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    });\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    this.animateBounce(i);\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //This switch statement handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          selected = 0;\n          this.deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n      //Gold circle tapped.\n\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n            this.onWin();\n            selected = 0;\n            this.deselect();\n          }\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  backALevel() {\n    var lsLevel = Number(localStorage.getItem(\"level\")) - 1;\n\n    if (lsLevel >= 0) {\n      localStorage.setItem(\"level\", lsLevel);\n      this.resetBoard();\n    }\n  }\n\n  onSnackBarClicked() {\n    if (localStorage.getItem(\"level\") === localStorage.getItem(\"highestLevelAchieved\")) {\n      var lsLevel = Number(localStorage.getItem(\"highestLevelAchieved\")) + 1;\n      localStorage.setItem(\"highestLevelAchieved\", lsLevel);\n    }\n\n    this.forwardALevel();\n  }\n\n  forwardALevel() {\n    const level = Number(localStorage.getItem(\"level\"));\n    const highestLevelAchieved = Number(localStorage.getItem(\"highestLevelAchieved\"));\n\n    if (level < highestLevelAchieved) {\n      var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n      localStorage.setItem(\"level\", lsLevel);\n      this.resetBoard();\n    }\n  }\n\n  resetBoard() {\n    var circleValues = this.state.circleValues;\n    var level = Number(localStorage.getItem(\"level\"));\n    var finalLevel = this.state.finalLevel;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    } //If level is not win level.\n\n\n    if (level !== finalLevel) {\n      this.setState({\n        runConfetti: false,\n        snackBarOpen: false\n      }); //Levels.\n\n      const goldIndex = [6, 9, 15, 3, 9, 15, 6, 0, 13, 9, 3, 11, 0, 13, 11, 4, 15, 6, 4, 8, 3];\n      const goldValue = [3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 10, 10, 11, 11, 11, 12, 13, 12, 14, 15, 16]; //-1 because levels start at zero.\n\n      console.log(\"number of levels: \" + (goldValue.length - 1));\n      this.changeCircleTo(goldIndex[level], \"gold\");\n      circleValues[goldIndex[level]] = goldValue[level];\n      this.changeCircleTo(5, \"active\");\n      circleValues[5] = 1;\n      this.changeCircleTo(10, \"active\");\n      circleValues[10] = 2;\n    } else if (level === this.state.finalLevel) {\n      this.setState({\n        runConfetti: true,\n        snackBarOpen: false\n      });\n      this.changeCircleTo(0, \"gold\");\n      circleValues[0] = \"Y\";\n      this.changeCircleTo(1, \"gold\");\n      circleValues[1] = \"O\";\n      this.changeCircleTo(2, \"gold\");\n      circleValues[2] = \"U\";\n      this.changeCircleTo(4, \"gold\");\n      circleValues[4] = \"B\";\n      this.changeCircleTo(5, \"gold\");\n      circleValues[5] = \"E\";\n      this.changeCircleTo(6, \"gold\");\n      circleValues[6] = \"A\";\n      this.changeCircleTo(7, \"gold\");\n      circleValues[7] = \"T\";\n      this.changeCircleTo(9, \"gold\");\n      circleValues[9] = \"T\";\n      this.changeCircleTo(10, \"gold\");\n      circleValues[10] = \"H\";\n      this.changeCircleTo(11, \"gold\");\n      circleValues[11] = \"E\";\n    }\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({\n      circleValues: circleValues\n    });\n  } //Deselect all selected circles.\n\n\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({\n      selected: 0\n    });\n  } //Handles changing a given circle to a given state.\n\n\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  onWin() {\n    this.setState({\n      runConfetti: true,\n      snackBarOpen: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n    const runConfetti = this.state.runConfetti;\n    const windowWidth = this.state.windowWidth;\n    const windowHeight = this.state.windowHeight;\n    const snackBarOpen = this.state.snackBarOpen;\n    return React.createElement(\"div\", {\n      className: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"snack-bar-container\",\n      onPointerDown: () => this.onSnackBarClicked(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(MySnackbar, {\n      snackBarOpen: snackBarOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      key: runConfetti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Confetti, {\n      width: windowWidth,\n      height: windowHeight,\n      run: runConfetti,\n      gravity: 0.3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"circles\"), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"level \", localStorage.getItem(\"level\")), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      onPointerDown: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"arrows-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onPointerDown: () => this.backALevel(),\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-between-arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onPointerDown: () => this.resetBoard(),\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-between-arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onPointerDown: () => this.forwardALevel(),\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"How To Play: \"), \"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected green circles. The new circle's value becomes the sum of the previously selected circles.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), \"The purpose of the game is to fill in the gold ring with a green circle that has the same number.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"Circles is licensed under the MIT licence. find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\"))), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","MySnackbar","selectedBeside","selectedNums","myColors","Confetti","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","circleTextColors","background","circleBorderColor","circleStates","selected","runConfetti","snackBarOpen","finalLevel","state","windowWidth","document","documentElement","clientWidth","windowHeight","clientHeight","updateWindowDimensions","bind","handleTap","componentDidMount","window","addEventListener","localStorage","getItem","setItem","resetBoard","componentWillUnmount","removeEventListener","setState","i","console","log","animateBounce","changeCircleTo","sum","deselect","finalSum","onWin","backALevel","lsLevel","Number","onSnackBarClicked","forwardALevel","level","highestLevelAchieved","z","goldIndex","goldValue","length","t","active","goldText","gold","element","getElementById","classList","remove","add","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CAEA;;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,6BAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,QAAIC,YAAY,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CAAnB;AACA,QAAIC,YAAY,GAAGF,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAeR,QAAQ,CAACU,SAAxB,CAAnB;AACA,QAAIC,gBAAgB,GAAGJ,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAeR,QAAQ,CAACY,UAAxB,CAAvB;AACA,QAAIC,iBAAiB,GAAGN,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAeR,QAAQ,CAACU,SAAxB,CAAxB;AACA,QAAII,YAAY,GAAGP,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,WAAf,CAAnB;AACA,QAAIO,QAAQ,GAAG,CAAf;AACA,QAAIC,WAAW,GAAG,KAAlB;AACA,QAAIC,YAAY,GAAG,KAAnB;AACA,QAAIC,UAAU,GAAG,EAAjB;AAEA,SAAKC,KAAL,GAAa;AACXb,MAAAA,YAAY,EAAEA,YADH;AAEXG,MAAAA,YAAY,EAAEA,YAFH;AAGXE,MAAAA,gBAAgB,EAAEA,gBAHP;AAIXE,MAAAA,iBAAiB,EAAEA,iBAJR;AAKXC,MAAAA,YAAY,EAAEA,YALH;AAMXC,MAAAA,QAAQ,EAAEA,QANC;AAOXC,MAAAA,WAAW,EAAEA,WAPF;AAQXC,MAAAA,YAAY,EAAEA,YARH;AASXC,MAAAA,UAAU,EAAEA,UATD;AAUXE,MAAAA,WAAW,EAAEC,QAAQ,CAACC,eAAT,CAAyBC,WAV3B;AAWXC,MAAAA,YAAY,EAAEH,QAAQ,CAACC,eAAT,CAAyBG;AAX5B,KAAb;AAcA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,sBAAL;AACAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,sBAAvC,EAFkB,CAIlB;;AACA,QAAI,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClCD,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B,CAA9B;AACD;;AACD,QAAI,CAACF,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAL,EAAmD;AACjDD,MAAAA,YAAY,CAACE,OAAb,CAAqB,sBAArB,EAA6C,CAA7C;AACD;;AAED,SAAKC,UAAL;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBN,IAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKX,sBAA1C;AACD;;AAEDA,EAAAA,sBAAsB,GAAG;AACvB,SAAKY,QAAL,CAAc;AACZlB,MAAAA,WAAW,EAAEC,QAAQ,CAACC,eAAT,CAAyBC,WAD1B;AAEZC,MAAAA,YAAY,EAAEH,QAAQ,CAACC,eAAT,CAAyBG;AAF3B,KAAd;AAID;;AAEDG,EAAAA,SAAS,CAACW,CAAD,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,CAAZ,GAAgB,SAA5B;AACA,SAAKG,aAAL,CAAmBH,CAAnB;AAEA,QAAIjC,YAAY,GAAG,KAAKa,KAAL,CAAWb,YAA9B;AACA,QAAIG,YAAY,GAAG,KAAKU,KAAL,CAAWV,YAA9B;AACA,QAAIE,gBAAgB,GAAG,KAAKQ,KAAL,CAAWR,gBAAlC;AACA,QAAIE,iBAAiB,GAAG,KAAKM,KAAL,CAAWN,iBAAnC;AACA,QAAIC,YAAY,GAAG,KAAKK,KAAL,CAAWL,YAA9B;AACA,QAAIC,QAAQ,GAAG,KAAKI,KAAL,CAAWJ,QAA1B,CATW,CAWX;;AACA,YAAQD,YAAY,CAACyB,CAAD,CAApB;AACE;AACA,WAAK,WAAL;AACE,YAAIxB,QAAQ,KAAK,CAAb,IAAkBjB,cAAc,CAACyC,CAAD,EAAIzB,YAAJ,CAApC,EAAuD;AACrD,eAAK6B,cAAL,CAAoBJ,CAApB,EAAuB,QAAvB;AAEA,gBAAMK,GAAG,GAAG7C,YAAY,CAACe,YAAD,EAAeR,YAAf,CAAxB;AACAA,UAAAA,YAAY,CAACiC,CAAD,CAAZ,GAAkBK,GAAlB;AAEA7B,UAAAA,QAAQ,GAAG,CAAX;AACA,eAAK8B,QAAL;AACD;;AACD;AAEF;;AACA,WAAK,QAAL;AACE,YAAI9B,QAAQ,IAAI,CAAhB,EAAmB;AACjBA,UAAAA,QAAQ,GAAG,CAAX;AACA,eAAK8B,QAAL;AACD;;AACD,YAAI,CAAC/C,cAAc,CAACyC,CAAD,EAAIzB,YAAJ,CAAnB,EAAsC;AACpCC,UAAAA,QAAQ,GAAG,CAAX;AACA,eAAK8B,QAAL;AACD;;AACD9B,QAAAA,QAAQ;AACR,aAAK4B,cAAL,CAAoBJ,CAApB,EAAuB,UAAvB;AACA;AAEF;;AACA,WAAK,UAAL;AACExB,QAAAA,QAAQ,GAAG,CAAX;AACA,aAAK8B,QAAL;AACA;AAEF;;AACA,WAAK,MAAL;AACE,YAAI9B,QAAQ,KAAK,CAAb,IAAkBjB,cAAc,CAACyC,CAAD,EAAIzB,YAAJ,CAApC,EAAuD;AACrD,gBAAMgC,QAAQ,GAAG/C,YAAY,CAACe,YAAD,EAAeR,YAAf,CAA7B;;AACA,cAAIA,YAAY,CAACiC,CAAD,CAAZ,KAAoBO,QAAxB,EAAkC;AAChC,iBAAKH,cAAL,CAAoBJ,CAApB,EAAuB,SAAvB;AAEA,iBAAKQ,KAAL;AAEAhC,YAAAA,QAAQ,GAAG,CAAX;AACA,iBAAK8B,QAAL;AACD;AACF;;AACD;;AAEF;AACE;AAlDJ;;AAqDA,SAAKP,QAAL,CAAc;AACZhC,MAAAA,YAAY,EAAEA,YADF;AAEZG,MAAAA,YAAY,EAAEA,YAFF;AAGZE,MAAAA,gBAAgB,EAAEA,gBAHN;AAIZE,MAAAA,iBAAiB,EAAEA,iBAJP;AAKZC,MAAAA,YAAY,EAAEA,YALF;AAMZC,MAAAA,QAAQ,EAAEA;AANE,KAAd;AAQD;;AAEDiC,EAAAA,UAAU,GAAG;AACX,QAAIC,OAAO,GAAGC,MAAM,CAAClB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAN,GAAwC,CAAtD;;AAEA,QAAIgB,OAAO,IAAI,CAAf,EAAkB;AAChBjB,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8Be,OAA9B;AAEA,WAAKd,UAAL;AACD;AACF;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,QACEnB,YAAY,CAACC,OAAb,CAAqB,OAArB,MACAD,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAFF,EAGE;AACA,UAAIgB,OAAO,GAAGC,MAAM,CAAClB,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAD,CAAN,GAAuD,CAArE;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,sBAArB,EAA6Ce,OAA7C;AACD;;AAED,SAAKG,aAAL;AACD;;AAEDA,EAAAA,aAAa,GAAG;AACd,UAAMC,KAAK,GAAGH,MAAM,CAAClB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAApB;AACA,UAAMqB,oBAAoB,GAAGJ,MAAM,CACjClB,YAAY,CAACC,OAAb,CAAqB,sBAArB,CADiC,CAAnC;;AAIA,QAAIoB,KAAK,GAAGC,oBAAZ,EAAkC;AAChC,UAAIL,OAAO,GAAGC,MAAM,CAAClB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAN,GAAwC,CAAtD;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8Be,OAA9B;AAEA,WAAKd,UAAL;AACD;AACF;;AAEDA,EAAAA,UAAU,GAAG;AACX,QAAI7B,YAAY,GAAG,KAAKa,KAAL,CAAWb,YAA9B;AACA,QAAI+C,KAAK,GAAGH,MAAM,CAAClB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAlB;AACA,QAAIf,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA5B;;AAEA,SAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,WAAKZ,cAAL,CAAoBY,CAApB,EAAuB,WAAvB;AACAjD,MAAAA,YAAY,CAACiD,CAAD,CAAZ,GAAkB,EAAlB;AACD,KARU,CAUX;;;AACA,QAAGF,KAAK,KAAKnC,UAAb,EAAyB;AACvB,WAAKoB,QAAL,CAAc;AACZtB,QAAAA,WAAW,EAAE,KADD;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd,EADuB,CAMvB;;AACA,YAAMuC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,EAA3B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,EAArC,EAAyC,CAAzC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,CAAlB;AACA,YAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,EAAgE,EAAhE,EAAoE,EAApE,EAAwE,EAAxE,CAAlB,CARuB,CAUvB;;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBgB,SAAS,CAACC,MAAV,GAAmB,CAA3C,CAAZ;AAEA,WAAKf,cAAL,CAAoBa,SAAS,CAACH,KAAD,CAA7B,EAAsC,MAAtC;AACA/C,MAAAA,YAAY,CAACkD,SAAS,CAACH,KAAD,CAAV,CAAZ,GAAiCI,SAAS,CAACJ,KAAD,CAA1C;AAEA,WAAKV,cAAL,CAAoB,CAApB,EAAuB,QAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,CAAlB;AACA,WAAKqC,cAAL,CAAoB,EAApB,EAAwB,QAAxB;AACArC,MAAAA,YAAY,CAAC,EAAD,CAAZ,GAAmB,CAAnB;AACD,KApBD,MAqBK,IAAG+C,KAAK,KAAK,KAAKlC,KAAL,CAAWD,UAAxB,EAAmC;AACtC,WAAKoB,QAAL,CAAc;AACZtB,QAAAA,WAAW,EAAE,IADD;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAKA,WAAK0B,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AAEA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AAEA,WAAKqC,cAAL,CAAoB,CAApB,EAAuB,MAAvB;AACArC,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAlB;AACA,WAAKqC,cAAL,CAAoB,EAApB,EAAwB,MAAxB;AACArC,MAAAA,YAAY,CAAC,EAAD,CAAZ,GAAmB,GAAnB;AACA,WAAKqC,cAAL,CAAoB,EAApB,EAAwB,MAAxB;AACArC,MAAAA,YAAY,CAAC,EAAD,CAAZ,GAAmB,GAAnB;AACD;;AAED,SAAK,IAAIqD,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,WAAKjB,aAAL,CAAmBiB,CAAnB;AACD;;AAED,SAAKrB,QAAL,CAAc;AAAEhC,MAAAA,YAAY,EAAEA;AAAhB,KAAd;AACD,GA5O+B,CA8OhC;;;AACAuC,EAAAA,QAAQ,GAAG;AACT,QAAI/B,YAAY,GAAG,KAAKK,KAAL,CAAWL,YAA9B;;AAEA,SAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,UAAIzC,YAAY,CAACyC,CAAD,CAAZ,KAAoB,UAAxB,EAAoC;AAClC,aAAKZ,cAAL,CAAoBY,CAApB,EAAuB,QAAvB;AACD;AACF;;AAED,SAAKjB,QAAL,CAAc;AAAEvB,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD,GAzP+B,CA2PhC;;;AACA4B,EAAAA,cAAc,CAACJ,CAAD,EAAIpB,KAAJ,EAAW;AACvB,QAAIb,YAAY,GAAG,KAAKa,KAAL,CAAWb,YAA9B;AACA,QAAIG,YAAY,GAAG,KAAKU,KAAL,CAAWV,YAA9B;AACA,QAAIE,gBAAgB,GAAG,KAAKQ,KAAL,CAAWR,gBAAlC;AACA,QAAIE,iBAAiB,GAAG,KAAKM,KAAL,CAAWN,iBAAnC;AACA,QAAIC,YAAY,GAAG,KAAKK,KAAL,CAAWL,YAA9B;;AAEA,YAAQK,KAAR;AACE,WAAK,WAAL;AACEV,QAAAA,YAAY,CAAC8B,CAAD,CAAZ,GAAkBvC,QAAQ,CAACU,SAA3B;AACAC,QAAAA,gBAAgB,CAAC4B,CAAD,CAAhB,GAAsBvC,QAAQ,CAACY,UAA/B;AACAC,QAAAA,iBAAiB,CAAC0B,CAAD,CAAjB,GAAuBvC,QAAQ,CAACU,SAAhC;AACAI,QAAAA,YAAY,CAACyB,CAAD,CAAZ,GAAkB,WAAlB;AACA;;AAEF,WAAK,QAAL;AACE9B,QAAAA,YAAY,CAAC8B,CAAD,CAAZ,GAAkBvC,QAAQ,CAAC4D,MAA3B;AACAjD,QAAAA,gBAAgB,CAAC4B,CAAD,CAAhB,GAAsBvC,QAAQ,CAACY,UAA/B;AACAC,QAAAA,iBAAiB,CAAC0B,CAAD,CAAjB,GAAuBvC,QAAQ,CAAC4D,MAAhC;AACA9C,QAAAA,YAAY,CAACyB,CAAD,CAAZ,GAAkB,QAAlB;AACA;;AAEF,WAAK,UAAL;AACE9B,QAAAA,YAAY,CAAC8B,CAAD,CAAZ,GAAkBvC,QAAQ,CAACe,QAA3B;AACAJ,QAAAA,gBAAgB,CAAC4B,CAAD,CAAhB,GAAsBvC,QAAQ,CAACY,UAA/B;AACAC,QAAAA,iBAAiB,CAAC0B,CAAD,CAAjB,GAAuBvC,QAAQ,CAACe,QAAhC;AACAD,QAAAA,YAAY,CAACyB,CAAD,CAAZ,GAAkB,UAAlB;AACA;;AAEF,WAAK,MAAL;AACE9B,QAAAA,YAAY,CAAC8B,CAAD,CAAZ,GAAkBvC,QAAQ,CAACY,UAA3B;AACAD,QAAAA,gBAAgB,CAAC4B,CAAD,CAAhB,GAAsBvC,QAAQ,CAAC6D,QAA/B;AACAhD,QAAAA,iBAAiB,CAAC0B,CAAD,CAAjB,GAAuBvC,QAAQ,CAAC8D,IAAhC;AACAhD,QAAAA,YAAY,CAACyB,CAAD,CAAZ,GAAkB,MAAlB;AACA;;AAEF,WAAK,SAAL;AACE9B,QAAAA,YAAY,CAAC8B,CAAD,CAAZ,GAAkBvC,QAAQ,CAAC4D,MAA3B;AACAjD,QAAAA,gBAAgB,CAAC4B,CAAD,CAAhB,GAAsBvC,QAAQ,CAACY,UAA/B;AACAC,QAAAA,iBAAiB,CAAC0B,CAAD,CAAjB,GAAuBvC,QAAQ,CAAC8D,IAAhC;AACAhD,QAAAA,YAAY,CAACyB,CAAD,CAAZ,GAAkB,SAAlB;AACA;;AAEF;AACE;AArCJ;;AAwCA,SAAKD,QAAL,CAAc;AACZhC,MAAAA,YAAY,EAAEA,YADF;AAEZG,MAAAA,YAAY,EAAEA,YAFF;AAGZE,MAAAA,gBAAgB,EAAEA,gBAHN;AAIZE,MAAAA,iBAAiB,EAAEA,iBAJP;AAKZC,MAAAA,YAAY,EAAEA;AALF,KAAd;AAOD;;AAED4B,EAAAA,aAAa,CAACH,CAAD,EAAI;AACf,QAAIwB,OAAO,GAAG1C,QAAQ,CAAC2C,cAAT,CAAwBzB,CAAxB,CAAd;AACAwB,IAAAA,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB;AACAH,IAAAA,OAAO,CAACE,SAAR,CAAkBE,GAAlB,CAAsB,QAAtB;AACAC,IAAAA,UAAU,CAAC,MAAML,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB,CAAP,EAA2C,GAA3C,CAAV;AACD;;AAEDnB,EAAAA,KAAK,GAAG;AACN,SAAKT,QAAL,CAAc;AACZtB,MAAAA,WAAW,EAAE,IADD;AAEZC,MAAAA,YAAY,EAAE;AAFF,KAAd;AAID;;AAEDoD,EAAAA,MAAM,GAAG;AACP,UAAM/D,YAAY,GAAG,KAAKa,KAAL,CAAWb,YAAhC;AACA,UAAMG,YAAY,GAAG,KAAKU,KAAL,CAAWV,YAAhC;AACA,UAAME,gBAAgB,GAAG,KAAKQ,KAAL,CAAWR,gBAApC;AACA,UAAME,iBAAiB,GAAG,KAAKM,KAAL,CAAWN,iBAArC;AAEA,UAAMG,WAAW,GAAG,KAAKG,KAAL,CAAWH,WAA/B;AACA,UAAMI,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,UAAMI,YAAY,GAAG,KAAKL,KAAL,CAAWK,YAAhC;AACA,UAAMP,YAAY,GAAG,KAAKE,KAAL,CAAWF,YAAhC;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,aAAa,EAAE,MAAM,KAAKkC,iBAAL,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAElC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOE;AAAK,MAAA,GAAG,EAAED,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEI,WADT;AAEE,MAAA,MAAM,EAAEI,YAFV;AAGE,MAAA,GAAG,EAAER,WAHP;AAIE,MAAA,OAAO,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,EAgBE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAiBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAkBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF,EAmBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAoBE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA8BgB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA9B,CApBF,EAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAsBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAuBE,oBAAC,KAAD;AACE,MAAA,YAAY,EAAE3B,YADhB;AAEE,MAAA,YAAY,EAAEG,YAFhB;AAGE,MAAA,gBAAgB,EAAEE,gBAHpB;AAIE,MAAA,iBAAiB,EAAEE,iBAJrB;AAKE,MAAA,aAAa,EAAE,KAAKe,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EA8BE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,aAAa,EAAE,MAAM,KAAKoB,UAAL,EAA1B;AAA6C,MAAA,SAAS,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAK,MAAA,aAAa,EAAE,MAAM,KAAKb,UAAL,EAA1B;AAA6C,MAAA,SAAS,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAK,MAAA,aAAa,EAAE,MAAM,KAAKiB,aAAL,EAA1B;AAAgD,MAAA,SAAS,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CA9BF,EA2CE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,EA6CE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CF,EA8CE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,qMAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,sGADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EACiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjE,EAEE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,iDAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,CAZF,CA9CF,EAoEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEF,CADF;AAwED;;AArZ+B;;AAwZlC,eAAelD,GAAf","sourcesContent":["import React from \"react\";\n\n//Component imports.\nimport Board from \"./components/Board\";\nimport MySnackbar from \"./components/Snackbar\";\n\n//Logic imports.\nimport selectedBeside from \"./logic/checkBeside.js\";\nimport selectedNums from \"./logic/selectedNums.js\";\n\n//Style imports.\nimport \"./style/app.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport { myColors } from \"./style/colors.js\";\nimport \"./style/fontawesome.min.css\";\n\n//Package imports.\nimport Confetti from \"react-confetti\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n    var snackBarOpen = false;\n    var finalLevel = 20;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti,\n      snackBarOpen: snackBarOpen,\n      finalLevel: finalLevel,\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n    //Initializing if values are undefined.\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n    if (!localStorage.getItem(\"highestLevelAchieved\")) {\n      localStorage.setItem(\"highestLevelAchieved\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    });\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    this.animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //This switch statement handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          selected = 0;\n          this.deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      //Gold circle tapped.\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n\n            this.onWin();\n\n            selected = 0;\n            this.deselect();\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  backALevel() {\n    var lsLevel = Number(localStorage.getItem(\"level\")) - 1;\n\n    if (lsLevel >= 0) {\n      localStorage.setItem(\"level\", lsLevel);\n\n      this.resetBoard();\n    }\n  }\n\n  onSnackBarClicked() {\n    if (\n      localStorage.getItem(\"level\") ===\n      localStorage.getItem(\"highestLevelAchieved\")\n    ) {\n      var lsLevel = Number(localStorage.getItem(\"highestLevelAchieved\")) + 1;\n      localStorage.setItem(\"highestLevelAchieved\", lsLevel);\n    }\n\n    this.forwardALevel();\n  }\n\n  forwardALevel() {\n    const level = Number(localStorage.getItem(\"level\"));\n    const highestLevelAchieved = Number(\n      localStorage.getItem(\"highestLevelAchieved\")\n    );\n\n    if (level < highestLevelAchieved) {\n      var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n      localStorage.setItem(\"level\", lsLevel);\n\n      this.resetBoard();\n    }\n  }\n\n  resetBoard() {\n    var circleValues = this.state.circleValues;\n    var level = Number(localStorage.getItem(\"level\"));\n    var finalLevel = this.state.finalLevel;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    //If level is not win level.\n    if(level !== finalLevel) {\n      this.setState({\n        runConfetti: false,\n        snackBarOpen: false\n      });\n\n      //Levels.\n      const goldIndex = [6, 9, 15, 3, 9, 15, 6, 0, 13, 9, 3, 11, 0, 13, 11, 4, 15, 6, 4, 8, 3];\n      const goldValue = [3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 10, 10, 11, 11, 11, 12, 13, 12, 14, 15, 16];\n\n      //-1 because levels start at zero.\n      console.log(\"number of levels: \" + (goldValue.length - 1));\n\n      this.changeCircleTo(goldIndex[level], \"gold\");\n      circleValues[goldIndex[level]] = goldValue[level];\n\n      this.changeCircleTo(5, \"active\");\n      circleValues[5] = 1;\n      this.changeCircleTo(10, \"active\");\n      circleValues[10] = 2;\n    }\n    else if(level === this.state.finalLevel){\n      this.setState({\n        runConfetti: true,\n        snackBarOpen: false\n      });\n\n      this.changeCircleTo(0, \"gold\");\n      circleValues[0] = \"Y\";\n      this.changeCircleTo(1, \"gold\");\n      circleValues[1] = \"O\";\n      this.changeCircleTo(2, \"gold\");\n      circleValues[2] = \"U\";\n\n      this.changeCircleTo(4, \"gold\");\n      circleValues[4] = \"B\";\n      this.changeCircleTo(5, \"gold\");\n      circleValues[5] = \"E\";\n      this.changeCircleTo(6, \"gold\");\n      circleValues[6] = \"A\";\n      this.changeCircleTo(7, \"gold\");\n      circleValues[7] = \"T\";\n\n      this.changeCircleTo(9, \"gold\");\n      circleValues[9] = \"T\";\n      this.changeCircleTo(10, \"gold\");\n      circleValues[10] = \"H\";\n      this.changeCircleTo(11, \"gold\");\n      circleValues[11] = \"E\";\n    }\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({ circleValues: circleValues });\n  }\n\n  //Deselect all selected circles.\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({ selected: 0 });\n  }\n\n  //Handles changing a given circle to a given state.\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  onWin() {\n    this.setState({\n      runConfetti: true,\n      snackBarOpen: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n\n    const runConfetti = this.state.runConfetti;\n    const windowWidth = this.state.windowWidth;\n    const windowHeight = this.state.windowHeight;\n    const snackBarOpen = this.state.snackBarOpen;\n\n    return (\n      <div className=\"global-width\">\n        <div\n          className=\"snack-bar-container\"\n          onPointerDown={() => this.onSnackBarClicked()}\n        >\n          <MySnackbar snackBarOpen={snackBarOpen} />\n        </div>\n        <div key={runConfetti}>\n          <Confetti\n            width={windowWidth}\n            height={windowHeight}\n            run={runConfetti}\n            gravity={0.3}\n          />\n        </div>\n\n        <div className=\"space-above-title\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"line-break\"></div>\n        <div className=\"level\">level {localStorage.getItem(\"level\")}</div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.backALevel()} className=\"arrow\">\n            <i className=\"fa fa-arrow-left\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.resetBoard()} className=\"arrow\">\n            <i className=\"fa fa-redo\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.forwardALevel()} className=\"arrow\">\n            <i className=\"fa fa-arrow-right\"></i>\n          </div>\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two adjacent green circles\n            and then select an empty circle adjacent to one of the selected\n            green circles. The new circle's value becomes the sum of the\n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the gold ring with a green\n            circle that has the same number.\n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            Circles is licensed under the MIT licence. find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n        <div className=\"space-above-title\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}