{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";//Imports.\nimport\"./style/index.scss\";import\"./style/board.scss\";import\"./style/bounce.css\";import Board from\"./components/Board\";import{myColors}from\"./style/colors.js\";import{selectedBeside}from\"./logic/checkBeside.js\";import{selectedNums}from\"./logic/selectedNums.js\";import\"./style/fontawesome.min.css\";import Confetti from'react-confetti';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));var circleValues=Array(16).fill(null);var circleColors=Array(16).fill(myColors.nonActive);var circleTextColors=Array(16).fill(myColors.background);var circleBorderColor=Array(16).fill(myColors.nonActive);var circleStates=Array(16).fill(\"nonactive\");var selected=0;var runConfetti=false;_this.state={circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates,selected:selected,runConfetti:runConfetti};_this.handleTap=_this.handleTap.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){if(!localStorage.getItem(\"level\")){localStorage.setItem(\"level\",0);}this.resetBoard();}},{key:\"handleTap\",value:function handleTap(i){console.log(\"circle \"+i+\" tapped\");this.animateBounce(i);var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var circleStates=this.state.circleStates;var selected=this.state.selected;//Handles the main logic of the game alongside /src/logic.js\nswitch(circleStates[i]){//Nonactive circle tapped.\ncase\"nonactive\":if(selected===2&&selectedBeside(i,circleStates)){this.changeCircleTo(i,\"active\");var sum=selectedNums(circleStates,circleValues);circleValues[i]=sum;selected=0;this.deselect();}break;//Active circle tapped.\ncase\"active\":if(selected>=2){selected=0;this.deselect();}if(!selectedBeside(i,circleStates)){selected=0;this.deselect();}selected++;this.changeCircleTo(i,\"selected\");break;//Selected circle tapped.\ncase\"selected\":selected=0;this.deselect();break;case\"gold\":if(selected===2&&selectedBeside(i,circleStates)){var finalSum=selectedNums(circleStates,circleValues);if(circleValues[i]===finalSum){this.changeCircleTo(i,\"goldWin\");var lsLevel=Number(localStorage.getItem(\"level\"))+1;localStorage.setItem(\"level\",lsLevel);this.animateWin();selected=0;this.deselect();}}break;default:break;}this.setState({circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates,selected:selected});}},{key:\"back\",value:function back(){console.log(\"level stored: \"+localStorage.getItem(\"level\"));}},{key:\"restart\",value:function restart(){console.log(\"reset\");this.resetBoard();}},{key:\"resetBoard\",value:function resetBoard(){this.setState({runConfetti:false});var circleValues=this.state.circleValues;for(var z=0;z<=15;z++){this.changeCircleTo(z,\"nonactive\");circleValues[z]=\"\";}var level=localStorage.getItem(\"level\");var goldIndex=[6,9,15,3];var goldValue=[3,4,5,6];this.changeCircleTo(goldIndex[level],\"gold\");circleValues[goldIndex[level]]=goldValue[level];this.changeCircleTo(5,\"active\");circleValues[5]=1;this.changeCircleTo(10,\"active\");circleValues[10]=2;for(var t=0;t<=15;t++){this.animateBounce(t);}this.setState({circleValues:circleValues});}//Deselect all selected circles.\n},{key:\"deselect\",value:function deselect(){var circleStates=this.state.circleStates;for(var z=0;z<=15;z++){if(circleStates[z]===\"selected\"){this.changeCircleTo(z,\"active\");}}this.setState({selected:0});}//Handles changing a given circle to a given state.\n},{key:\"changeCircleTo\",value:function changeCircleTo(i,state){var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var circleStates=this.state.circleStates;switch(state){case\"nonactive\":circleColors[i]=myColors.nonActive;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.nonActive;circleStates[i]=\"nonactive\";break;case\"active\":circleColors[i]=myColors.active;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.active;circleStates[i]=\"active\";break;case\"selected\":circleColors[i]=myColors.selected;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.selected;circleStates[i]=\"selected\";break;case\"gold\":circleColors[i]=myColors.background;circleTextColors[i]=myColors.goldText;circleBorderColor[i]=myColors.gold;circleStates[i]=\"gold\";break;case\"goldWin\":circleColors[i]=myColors.active;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.gold;circleStates[i]=\"goldWin\";break;default:break;}this.setState({circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates});}},{key:\"animateBounce\",value:function animateBounce(i){var element=document.getElementById(i);element.classList.remove(\"bounce\");element.classList.add(\"bounce\");setTimeout(function(){return element.classList.remove(\"bounce\");},400);}},{key:\"animateWin\",value:function animateWin(){this.setState({runConfetti:true});}},{key:\"render\",value:function render(){var _this2=this;var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var runConfetti=this.state.runConfetti;return React.createElement(\"div\",{className:\"global-width\"},React.createElement(\"div\",{key:runConfetti},React.createElement(Confetti,{run:runConfetti})),React.createElement(\"div\",{className:\"space-above-title\"}),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"title\"},\"circles\"),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"level\"},\"level 0\"),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(Board,{circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,onPointerDown:this.handleTap}),React.createElement(\"div\",{className:\"arrows-container\"},React.createElement(\"div\",{onPointerDown:function onPointerDown(){return _this2.back();},className:\"arrows\"},React.createElement(\"i\",{className:\"fa fa-arrow-left\"})),React.createElement(\"div\",{className:\"space-between-arrows\"}),React.createElement(\"div\",{onPointerDown:function onPointerDown(){return _this2.restart();},className:\"arrows\"},React.createElement(\"i\",{className:\"fa fa-redo\"}))),React.createElement(\"div\",{className:\"content-space-b\"}),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"content-space-b\"}),React.createElement(\"div\",{className:\"bottom-text-container\"},React.createElement(\"div\",{className:\"github-link-text\"},React.createElement(\"strong\",null,\"How To Play: \"),\"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected green circles. The new circle's value becomes the sum of the previously selected circles.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"The purpose of the game is to fill in the gold ring with a green circle that has the same number.\"),React.createElement(\"br\",null),React.createElement(\"div\",{className:\"github-link-text\"},\"find the code here: \",React.createElement(\"br\",null),React.createElement(\"a\",{className:\"github-link\",href:\"https://github.com/AlexanderStewart/circles-web\"},\"github.com/alexanderstewart/circles-web\"))),React.createElement(\"div\",{className:\"space-above-title\"}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","Confetti","App","props","circleValues","Array","fill","circleColors","nonActive","circleTextColors","background","circleBorderColor","circleStates","selected","runConfetti","state","handleTap","bind","localStorage","getItem","setItem","resetBoard","i","console","log","animateBounce","changeCircleTo","sum","deselect","finalSum","lsLevel","Number","animateWin","setState","z","level","goldIndex","goldValue","t","active","goldText","gold","element","document","getElementById","classList","remove","add","setTimeout","back","restart","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport \"./style/fontawesome.min.css\";\nimport Confetti from 'react-confetti'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    this.animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          selected = 0;\n          this.deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n\n            var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n            localStorage.setItem(\"level\", lsLevel);\n\n            this.animateWin();\n\n            selected = 0;\n            this.deselect();\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  back() {\n    console.log(\"level stored: \" + localStorage.getItem(\"level\"));\n  }\n\n  restart() {\n    console.log(\"reset\");\n    this.resetBoard();\n  }\n\n  resetBoard() {\n    this.setState({\n      runConfetti: false\n    });\n\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    var level = localStorage.getItem(\"level\");\n    const goldIndex = [6, 9, 15, 3];\n    const goldValue = [3, 4, 5, 6];\n\n    this.changeCircleTo(goldIndex[level], \"gold\");\n    circleValues[goldIndex[level]] = goldValue[level];\n\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({ circleValues: circleValues });\n  }\n\n  //Deselect all selected circles.\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({ selected: 0 });\n  }\n\n  //Handles changing a given circle to a given state.\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  animateWin() {\n    this.setState({\n      runConfetti: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n    const runConfetti = this.state.runConfetti;\n\n    return (\n      <div className=\"global-width\">\n        <div key={runConfetti}>\n          <Confetti run={runConfetti}/>\n        </div>\n        <div className=\"space-above-title\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"line-break\"></div>\n        <div className=\"level\">level 0</div>\n        <div className=\"line-break\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.back()} className=\"arrows\">\n            <i className=\"fa fa-arrow-left\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.restart()} className=\"arrows\">\n            <i className=\"fa fa-redo\"></i>\n          </div>\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two adjacent green circles\n            and then select an empty circle adjacent to one of the selected\n            green circles. The new circle's value becomes the sum of the\n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the gold ring with a green\n            circle that has the same number.\n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n        <div className=\"space-above-title\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}