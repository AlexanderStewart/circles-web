{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";//Imports.\nimport\"./style/index.scss\";import\"./style/board.scss\";import Board from\"./components/Board\";import{myColors}from\"./style/colors.js\";import{selectedBeside}from\"./logic/checkBeside.js\";import{selectedNums}from\"./logic/selectedNums.js\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));//Set board\nvar circleValues=Array(16).fill(null);circleValues[5]=1;circleValues[10]=2;var circleColors=Array(16).fill(myColors.nonActive);circleColors[5]=myColors.active;circleColors[10]=myColors.active;var circleStates=Array(16).fill(\"nonactive\");circleStates[5]=\"active\";circleStates[10]=\"active\";var selected=0;_this.state={circleValues:circleValues,circleColors:circleColors,circleStates:circleStates,selected:selected};_this.handleTap=_this.handleTap.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"handleTap\",value:function handleTap(i){console.log(\"circle \"+i+\" tapped\");var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleStates=this.state.circleStates;var selected=this.state.selected;//Handles the main logic of the game alongside /src/logic.js\nswitch(circleStates[i]){//Nonactive circle tapped.\ncase\"nonactive\":if(selected===2&&selectedBeside(i,circleStates)){changeCircleTo(i,\"active\");var sum=selectedNums(circleStates,circleValues);circleValues[i]=sum;deselect();}break;//Active circle tapped.\ncase\"active\":console.log(\"selected: \"+selected);if(selected>=2){deselect();}if(!selectedBeside(i,circleStates)){deselect();}selected++;changeCircleTo(i,\"selected\");break;//Selected circle tapped.\ncase\"selected\":selected--;deselect();break;default:break;}//Deselect all selected circles\nfunction deselect(){for(var z=0;z<=15;z++){if(circleStates[z]===\"selected\"){changeCircleTo(z,\"active\");}}selected=0;}//Handles changing a given circle to a given state.\nfunction changeCircleTo(i,state){switch(state){case\"nonactive\":circleColors[i]=myColors.nonActive;circleStates[i]=\"nonactive\";break;case\"active\":circleColors[i]=myColors.active;circleStates[i]=\"active\";break;case\"selected\":circleColors[i]=myColors.selected;circleStates[i]=\"selected\";break;default:break;}}this.setState({circleValues:circleValues,circleColors:circleColors,circleStates:circleStates,selected:selected});}},{key:\"render\",value:function render(){var _this2=this;var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;return React.createElement(\"div\",{class:\"global-width\"},React.createElement(\"div\",{class:\"space-above-title\"}),React.createElement(\"div\",{className:\"title-container\"},React.createElement(\"div\",{className:\"title\"},\"circles\")),React.createElement(\"div\",{className:\"content-space\"}),React.createElement(Board,{circleValues:circleValues,circleColors:circleColors,onTouchEnd:function onTouchEnd(event){return _this2.processTouch;},onMouseUp:this.handleTap}),React.createElement(\"div\",{className:\"content-space\"}),React.createElement(\"div\",{className:\"bottom-text-container\"},React.createElement(\"div\",{className:\"github-link-text\"},\"find the code here: \",React.createElement(\"br\",null),React.createElement(\"a\",{className:\"github-link\",href:\"https://github.com/AlexanderStewart/circles-web\"},\"github.com/alexanderstewart/circles-web\"))));}},{key:\"processTouch\",value:function processTouch(event,i){event.preventDefault();this.handleTap(i);}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","App","props","circleValues","Array","fill","circleColors","nonActive","active","circleStates","selected","state","handleTap","bind","i","console","log","changeCircleTo","sum","deselect","z","setState","event","processTouch","preventDefault","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Set board\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        console.log(\"selected: \" + selected);\n        if (selected >= 2) {\n          deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      default:\n        break;\n    }\n\n    //Deselect all selected circles\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n      selected = 0;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n\n    return (\n      <div class=\"global-width\">\n        <div class=\"space-above-title\"></div>\n        <div className=\"title-container\">\n          <div className=\"title\">circles</div>\n        </div>\n        <div className=\"content-space\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          onTouchEnd={(event) => this.processTouch}\n          onMouseUp={this.handleTap}\n        />\n        <div className=\"content-space\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  processTouch(event, i) { \n    event.preventDefault();\n    this.handleTap(i);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}