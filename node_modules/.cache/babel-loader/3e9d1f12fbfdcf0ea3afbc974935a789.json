{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";//Component imports.\nimport Board from\"./components/Board\";import MySnackbar from\"./components/Snackbar\";//Logic imports.\nimport selectedBeside from\"./logic/checkBeside.js\";import selectedNums from\"./logic/selectedNums.js\";//Style imports.\nimport\"./style/app.scss\";import\"./style/board.scss\";import\"./style/bounce.css\";import{myColors}from\"./style/colors.js\";import\"./style/fontawesome.min.css\";//Package imports.\nimport Confetti from\"react-confetti\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));var circleValues=Array(16).fill(null);var circleColors=Array(16).fill(myColors.nonActive);var circleTextColors=Array(16).fill(myColors.background);var circleBorderColor=Array(16).fill(myColors.nonActive);var circleStates=Array(16).fill(\"nonactive\");var selected=0;var runConfetti=false;var snackBarOpen=false;_this.state={circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates,selected:selected,runConfetti:runConfetti,snackBarOpen:snackBarOpen,windowWidth:document.documentElement.clientWidth,windowHeight:document.documentElement.clientHeight};_this.updateWindowDimensions=_this.updateWindowDimensions.bind(_assertThisInitialized(_this));_this.handleTap=_this.handleTap.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateWindowDimensions();window.addEventListener(\"resize\",this.updateWindowDimensions);//Initializing if value is undefined.\nif(!localStorage.getItem(\"level\")){localStorage.setItem(\"level\",0);}if(!localStorage.getItem(\"highestLevelAchieved\")){localStorage.setItem(\"highestLevelAchieved\",0);}this.resetBoard();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener(\"resize\",this.updateWindowDimensions);}},{key:\"updateWindowDimensions\",value:function updateWindowDimensions(){this.setState({windowWidth:document.documentElement.clientWidth,windowHeight:document.documentElement.clientHeight});}},{key:\"handleTap\",value:function handleTap(i){console.log(\"circle \"+i+\" tapped\");this.animateBounce(i);var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var circleStates=this.state.circleStates;var selected=this.state.selected;//This switch statement handles the main logic of the game alongside /src/logic.js\nswitch(circleStates[i]){//Nonactive circle tapped.\ncase\"nonactive\":if(selected===2&&selectedBeside(i,circleStates)){this.changeCircleTo(i,\"active\");var sum=selectedNums(circleStates,circleValues);circleValues[i]=sum;selected=0;this.deselect();}break;//Active circle tapped.\ncase\"active\":if(selected>=2){selected=0;this.deselect();}if(!selectedBeside(i,circleStates)){selected=0;this.deselect();}selected++;this.changeCircleTo(i,\"selected\");break;//Selected circle tapped.\ncase\"selected\":selected=0;this.deselect();break;//Gold circle tapped.\ncase\"gold\":if(selected===2&&selectedBeside(i,circleStates)){var finalSum=selectedNums(circleStates,circleValues);if(circleValues[i]===finalSum){this.changeCircleTo(i,\"goldWin\");this.onWin();selected=0;this.deselect();}}break;default:break;}this.setState({circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates,selected:selected});}},{key:\"backALevel\",value:function backALevel(){var lsLevel=Number(localStorage.getItem(\"level\"))-1;if(lsLevel>=0){localStorage.setItem(\"level\",lsLevel);this.resetBoard();}}},{key:\"onSnackBarClicked\",value:function onSnackBarClicked(){if(localStorage.getItem(\"level\")===localStorage.getItem(\"highestLevelAchieved\")){var lsLevel=Number(localStorage.getItem(\"highestLevelAchieved\"))+1;localStorage.setItem(\"highestLevelAchieved\",lsLevel);}this.forwardALevel();}},{key:\"forwardALevel\",value:function forwardALevel(){console.log(\"forward a level\");var level=Number(localStorage.getItem(\"level\"));var highestLevelAchieved=Number(localStorage.getItem(\"highestLevelAchieved\"));if(level<highestLevelAchieved){var lsLevel=Number(localStorage.getItem(\"level\"))+1;localStorage.setItem(\"level\",lsLevel);console.log(\"Level before resetBoard: \"+localStorage.getItem(\"level\"));this.resetBoard();}}},{key:\"resetBoard\",value:function resetBoard(){this.setState({runConfetti:false,snackBarOpen:false});var circleValues=this.state.circleValues;for(var z=0;z<=15;z++){this.changeCircleTo(z,\"nonactive\");circleValues[z]=\"\";}var level=localStorage.getItem(\"level\");var goldIndex=[6,9,15,3,9,15,6,0,13,9,3,11,0,13,11];var goldValue=[3,4,5,6,6,7,7,8,9,10,10,10,11,11,11];console.log(\"number of levels: \"+(goldValue.length-1));this.changeCircleTo(goldIndex[level],\"gold\");circleValues[goldIndex[level]]=goldValue[level];this.changeCircleTo(5,\"active\");circleValues[5]=1;this.changeCircleTo(10,\"active\");circleValues[10]=2;for(var t=0;t<=15;t++){this.animateBounce(t);}this.setState({circleValues:circleValues});}//Deselect all selected circles.\n},{key:\"deselect\",value:function deselect(){var circleStates=this.state.circleStates;for(var z=0;z<=15;z++){if(circleStates[z]===\"selected\"){this.changeCircleTo(z,\"active\");}}this.setState({selected:0});}//Handles changing a given circle to a given state.\n},{key:\"changeCircleTo\",value:function changeCircleTo(i,state){var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var circleStates=this.state.circleStates;switch(state){case\"nonactive\":circleColors[i]=myColors.nonActive;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.nonActive;circleStates[i]=\"nonactive\";break;case\"active\":circleColors[i]=myColors.active;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.active;circleStates[i]=\"active\";break;case\"selected\":circleColors[i]=myColors.selected;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.selected;circleStates[i]=\"selected\";break;case\"gold\":circleColors[i]=myColors.background;circleTextColors[i]=myColors.goldText;circleBorderColor[i]=myColors.gold;circleStates[i]=\"gold\";break;case\"goldWin\":circleColors[i]=myColors.active;circleTextColors[i]=myColors.background;circleBorderColor[i]=myColors.gold;circleStates[i]=\"goldWin\";break;default:break;}this.setState({circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,circleStates:circleStates});}},{key:\"animateBounce\",value:function animateBounce(i){var element=document.getElementById(i);element.classList.remove(\"bounce\");element.classList.add(\"bounce\");setTimeout(function(){return element.classList.remove(\"bounce\");},400);}},{key:\"onWin\",value:function onWin(){this.setState({runConfetti:true,snackBarOpen:true});}},{key:\"render\",value:function render(){var _this2=this;var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleTextColors=this.state.circleTextColors;var circleBorderColor=this.state.circleBorderColor;var runConfetti=this.state.runConfetti;var windowWidth=this.state.windowWidth;var windowHeight=this.state.windowHeight;var snackBarOpen=this.state.snackBarOpen;return React.createElement(\"div\",{className:\"global-width\"},React.createElement(\"div\",{className:\"snack-bar-container\",onPointerDown:function onPointerDown(){return _this2.onSnackBarClicked();}},React.createElement(MySnackbar,{snackBarOpen:snackBarOpen})),React.createElement(\"div\",{key:runConfetti},React.createElement(Confetti,{width:windowWidth,height:windowHeight,run:runConfetti,gravity:0.3})),React.createElement(\"div\",{className:\"space-above-title\"}),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"title\"},\"circles\"),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"level\"},\"level \",localStorage.getItem(\"level\")),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"content-space-b\"}),React.createElement(Board,{circleValues:circleValues,circleColors:circleColors,circleTextColors:circleTextColors,circleBorderColor:circleBorderColor,onPointerDown:this.handleTap}),React.createElement(\"div\",{className:\"arrows-container\"},React.createElement(\"div\",{onPointerDown:function onPointerDown(){return _this2.backALevel();},className:\"arrow\"},React.createElement(\"i\",{className:\"fa fa-arrow-left\"})),React.createElement(\"div\",{className:\"space-between-arrows\"}),React.createElement(\"div\",{onPointerDown:function onPointerDown(){return _this2.resetBoard();},className:\"arrow\"},React.createElement(\"i\",{className:\"fa fa-redo\"})),React.createElement(\"div\",{className:\"space-between-arrows\"}),React.createElement(\"div\",{onPointerDown:function onPointerDown(){return _this2.forwardALevel();},className:\"arrow\"},React.createElement(\"i\",{className:\"fa fa-arrow-right\"}))),React.createElement(\"div\",{className:\"content-space-b\"}),React.createElement(\"div\",{className:\"line-break\"}),React.createElement(\"div\",{className:\"content-space-b\"}),React.createElement(\"div\",{className:\"bottom-text-container\"},React.createElement(\"div\",{className:\"github-link-text\"},React.createElement(\"strong\",null,\"How To Play: \"),\"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected green circles. The new circle's value becomes the sum of the previously selected circles.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"The purpose of the game is to fill in the gold ring with a green circle that has the same number.\"),React.createElement(\"br\",null),React.createElement(\"div\",{className:\"github-link-text\"},\"find the code here: \",React.createElement(\"br\",null),React.createElement(\"a\",{className:\"github-link\",href:\"https://github.com/AlexanderStewart/circles-web\"},\"github.com/alexanderstewart/circles-web\"))),React.createElement(\"div\",{className:\"space-above-title\"}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","MySnackbar","selectedBeside","selectedNums","myColors","Confetti","App","props","circleValues","Array","fill","circleColors","nonActive","circleTextColors","background","circleBorderColor","circleStates","selected","runConfetti","snackBarOpen","state","windowWidth","document","documentElement","clientWidth","windowHeight","clientHeight","updateWindowDimensions","bind","handleTap","window","addEventListener","localStorage","getItem","setItem","resetBoard","removeEventListener","setState","i","console","log","animateBounce","changeCircleTo","sum","deselect","finalSum","onWin","lsLevel","Number","forwardALevel","level","highestLevelAchieved","z","goldIndex","goldValue","length","t","active","goldText","gold","element","getElementById","classList","remove","add","setTimeout","onSnackBarClicked","backALevel","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Component imports.\nimport Board from \"./components/Board\";\nimport MySnackbar from \"./components/Snackbar\";\n\n//Logic imports.\nimport selectedBeside from \"./logic/checkBeside.js\";\nimport selectedNums from \"./logic/selectedNums.js\";\n\n//Style imports.\nimport \"./style/app.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport { myColors } from \"./style/colors.js\";\nimport \"./style/fontawesome.min.css\";\n\n//Package imports.\nimport Confetti from \"react-confetti\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n    var snackBarOpen = false;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti,\n      snackBarOpen: snackBarOpen,\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n    //Initializing if value is undefined.\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n    if (!localStorage.getItem(\"highestLevelAchieved\")) {\n      localStorage.setItem(\"highestLevelAchieved\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      windowWidth: document.documentElement.clientWidth,\n      windowHeight: document.documentElement.clientHeight\n    });\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    this.animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //This switch statement handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          selected = 0;\n          this.deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      //Gold circle tapped.\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n\n            this.onWin();\n\n            selected = 0;\n            this.deselect();\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  backALevel() {\n    var lsLevel = Number(localStorage.getItem(\"level\")) - 1;\n\n    if (lsLevel >= 0) {\n      localStorage.setItem(\"level\", lsLevel);\n\n      this.resetBoard();\n    }\n  }\n\n  onSnackBarClicked() {\n    if (\n      localStorage.getItem(\"level\") ===\n      localStorage.getItem(\"highestLevelAchieved\")\n    ) {\n      var lsLevel = Number(localStorage.getItem(\"highestLevelAchieved\")) + 1;\n      localStorage.setItem(\"highestLevelAchieved\", lsLevel);\n    }\n\n    this.forwardALevel();\n  }\n\n  forwardALevel() {\n    console.log(\"forward a level\");\n\n    const level = Number(localStorage.getItem(\"level\"));\n    const highestLevelAchieved = Number(\n      localStorage.getItem(\"highestLevelAchieved\")\n    );\n\n    if (level < highestLevelAchieved) {\n      var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n      localStorage.setItem(\"level\", lsLevel);\n\n      console.log(\"Level before resetBoard: \" + localStorage.getItem(\"level\"));\n\n      this.resetBoard();\n    }\n  }\n\n  resetBoard() {\n    this.setState({\n      runConfetti: false,\n      snackBarOpen: false\n    });\n\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    var level = localStorage.getItem(\"level\");\n    const goldIndex = [6, 9, 15, 3, 9, 15, 6, 0, 13, 9, 3, 11, 0, 13, 11];\n    const goldValue = [3, 4, 5, 6, 6, 7, 7, 8, 9, 10, 10, 10, 11, 11, 11];\n\n    console.log(\"number of levels: \" + (goldValue.length - 1));\n\n    this.changeCircleTo(goldIndex[level], \"gold\");\n    circleValues[goldIndex[level]] = goldValue[level];\n\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({ circleValues: circleValues });\n  }\n\n  //Deselect all selected circles.\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({ selected: 0 });\n  }\n\n  //Handles changing a given circle to a given state.\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  onWin() {\n    this.setState({\n      runConfetti: true,\n      snackBarOpen: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n\n    const runConfetti = this.state.runConfetti;\n    const windowWidth = this.state.windowWidth;\n    const windowHeight = this.state.windowHeight;\n    const snackBarOpen = this.state.snackBarOpen;\n\n    return (\n      <div className=\"global-width\">\n        <div\n          className=\"snack-bar-container\"\n          onPointerDown={() => this.onSnackBarClicked()}\n        >\n          <MySnackbar snackBarOpen={snackBarOpen} />\n        </div>\n        <div key={runConfetti}>\n          <Confetti\n            width={windowWidth}\n            height={windowHeight}\n            run={runConfetti}\n            gravity={0.3}\n          />\n        </div>\n\n        <div className=\"space-above-title\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"line-break\"></div>\n        <div className=\"level\">level {localStorage.getItem(\"level\")}</div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.backALevel()} className=\"arrow\">\n            <i className=\"fa fa-arrow-left\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.resetBoard()} className=\"arrow\">\n            <i className=\"fa fa-redo\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.forwardALevel()} className=\"arrow\">\n            <i className=\"fa fa-arrow-right\"></i>\n          </div>\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two adjacent green circles\n            and then select an empty circle adjacent to one of the selected\n            green circles. The new circle's value becomes the sum of the\n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the gold ring with a green\n            circle that has the same number.\n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n        <div className=\"space-above-title\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}