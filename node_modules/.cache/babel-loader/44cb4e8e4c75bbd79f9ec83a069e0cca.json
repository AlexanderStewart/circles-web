{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport \"./style/fontawesome.min.css\";\nimport Confetti from \"react-confetti\";\nimport { Snackbar } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    this.animateBounce(i);\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //Handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          selected = 0;\n          this.deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n            var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n            localStorage.setItem(\"level\", lsLevel);\n            this.animateWin();\n            selected = 0;\n            this.deselect();\n          }\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  back() {\n    console.log(\"level stored: \" + localStorage.getItem(\"level\"));\n  }\n\n  restart() {\n    console.log(\"reset\");\n    this.resetBoard();\n  }\n\n  resetBoard() {\n    this.setState({\n      runConfetti: false\n    });\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    var level = localStorage.getItem(\"level\");\n    const goldIndex = [6, 9, 15, 3];\n    const goldValue = [3, 4, 5, 6];\n    this.changeCircleTo(goldIndex[level], \"gold\");\n    circleValues[goldIndex[level]] = goldValue[level];\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({\n      circleValues: circleValues\n    });\n  } //Deselect all selected circles.\n\n\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({\n      selected: 0\n    });\n  } //Handles changing a given circle to a given state.\n\n\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  animateWin() {\n    this.setState({\n      runConfetti: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n    const runConfetti = this.state.runConfetti;\n    const width = this.state.width;\n    const height = this.state.height;\n    return React.createElement(\"div\", {\n      className: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: runConfetti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Confetti, {\n      width: width,\n      height: height,\n      run: runConfetti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"circles\"), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"level 0\"), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      onPointerDown: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"arrows-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onPointerDown: () => this.back(),\n      className: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-between-arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onPointerDown: () => this.restart(),\n      className: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"How To Play: \"), \"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected green circles. The new circle's value becomes the sum of the previously selected circles.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), \"The purpose of the game is to fill in the gold ring with a green circle that has the same number.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\"))), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      open: true,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      onClose: handleClose,\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"This is a success message!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","Confetti","Snackbar","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","circleTextColors","background","circleBorderColor","circleStates","selected","runConfetti","state","width","window","innerWidth","height","innerHeight","updateWindowDimensions","bind","handleTap","componentDidMount","addEventListener","localStorage","getItem","setItem","resetBoard","componentWillUnmount","removeEventListener","setState","i","console","log","animateBounce","changeCircleTo","sum","deselect","finalSum","lsLevel","Number","animateWin","back","restart","z","level","goldIndex","goldValue","t","active","goldText","gold","element","document","getElementById","classList","remove","add","setTimeout","render","handleClose"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport \"./style/fontawesome.min.css\";\nimport Confetti from \"react-confetti\";\nimport { Snackbar } from '@material-ui/core';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n    var runConfetti = false;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected,\n      runConfetti: runConfetti,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n\n    if (!localStorage.getItem(\"level\")) {\n      localStorage.setItem(\"level\", 0);\n    }\n\n    this.resetBoard();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    this.animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n\n          const sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          selected = 0;\n          this.deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      case \"gold\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          const finalSum = selectedNums(circleStates, circleValues);\n          if (circleValues[i] === finalSum) {\n            this.changeCircleTo(i, \"goldWin\");\n\n            var lsLevel = Number(localStorage.getItem(\"level\")) + 1;\n            localStorage.setItem(\"level\", lsLevel);\n\n            this.animateWin();\n\n            selected = 0;\n            this.deselect();\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  back() {\n    console.log(\"level stored: \" + localStorage.getItem(\"level\"));\n  }\n\n  restart() {\n    console.log(\"reset\");\n    this.resetBoard();\n  }\n\n  resetBoard() {\n    this.setState({\n      runConfetti: false\n    });\n\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    var level = localStorage.getItem(\"level\");\n    const goldIndex = [6, 9, 15, 3];\n    const goldValue = [3, 4, 5, 6];\n\n    this.changeCircleTo(goldIndex[level], \"gold\");\n    circleValues[goldIndex[level]] = goldValue[level];\n\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({ circleValues: circleValues });\n  }\n\n  //Deselect all selected circles.\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({ selected: 0 });\n  }\n\n  //Handles changing a given circle to a given state.\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.background;\n        circleTextColors[i] = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      case \"goldWin\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"goldWin\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  animateWin() {\n    this.setState({\n      runConfetti: true\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n\n    const runConfetti = this.state.runConfetti;\n    const width = this.state.width;\n    const height = this.state.height;\n\n    return (\n      <div className=\"global-width\">\n        <div key={runConfetti}>\n          <Confetti width={width} height={height} run={runConfetti} />\n        </div>\n        <div className=\"space-above-title\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"line-break\"></div>\n        <div className=\"level\">level 0</div>\n        <div className=\"line-break\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.back()} className=\"arrows\">\n            <i className=\"fa fa-arrow-left\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.restart()} className=\"arrows\">\n            <i className=\"fa fa-redo\"></i>\n          </div>\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two adjacent green circles\n            and then select an empty circle adjacent to one of the selected\n            green circles. The new circle's value becomes the sum of the\n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the gold ring with a green\n            circle that has the same number.\n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n        <div className=\"space-above-title\"></div>\n        <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\">\n            This is a success message!\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}