{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport \"./style/fontawesome.min.css\";\nimport ls from 'local-storage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0; //var level = this.state.level;\n\n    const indexOfGold = [6, 12, 1, 15];\n    const valueOfGold = [3, 5, 4, 6]; //console.log(\"level: \" + level);\n    //GOlD\n    //this.changeCircleTo(indexOfGold[level], \"gold\");\n    //circleValues[6] = valueOfGold[level];\n\n    this.changeCircleTo(6, \"gold\");\n    circleValues[6] = valueOfGold[3];\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    };\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  back() {}\n\n  restart() {\n    this.resetBoard();\n  }\n\n  resetBoard() {\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n    this.changeCircleTo(5, \"active\");\n    this.changeCircleTo(6, \"gold\");\n    this.changeCircleTo(10, \"active\");\n\n    for (var t = 0; t <= 15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({\n      circleValues: circleValues\n    });\n  } //Deselect all selected circles.\n\n\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({\n      selected: 0\n    });\n  } //Handles changing a given circle to a given state.\n\n\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    this.animateBounce(i);\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //Handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          selected = 0;\n          this.deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      case \"gold\":\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n    return React.createElement(\"div\", {\n      className: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"circles\"), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"level 0\"), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      onPointerDown: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"arrows-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onPointerDown: () => this.back(),\n      className: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"space-between-arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onPointerDown: () => this.restart(),\n      className: \"arrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"How To Play: \"), \"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected green circles. The new circle's value becomes the sum of the previously selected circles.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), \"The purpose of the game is to fill in the gold circle with a green circle that has the same number.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\"))), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","ls","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","circleTextColors","background","circleBorderColor","circleStates","selected","indexOfGold","valueOfGold","changeCircleTo","state","handleTap","bind","back","restart","resetBoard","z","t","animateBounce","setState","deselect","i","active","goldText","gold","element","document","getElementById","classList","remove","add","setTimeout","console","log","sum","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport \"./style/fontawesome.min.css\";\nimport ls from 'local-storage'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    var circleColors = Array(16).fill(myColors.nonActive);\n    var circleTextColors = Array(16).fill(myColors.background);\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    var circleStates = Array(16).fill(\"nonactive\");\n    var selected = 0;\n\n    //var level = this.state.level;\n\n    const indexOfGold = [6, 12, 1, 15];\n    const valueOfGold = [3, 5 , 4, 6];\n\n    //console.log(\"level: \" + level);\n\n    //GOlD\n    //this.changeCircleTo(indexOfGold[level], \"gold\");\n    //circleValues[6] = valueOfGold[level];\n\n    this.changeCircleTo(6, \"gold\");\n    circleValues[6] = valueOfGold[3];\n\n    this.changeCircleTo(5, \"active\");\n    circleValues[5] = 1;\n\n    this.changeCircleTo(10, \"active\");\n    circleValues[10] = 2;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  back() {\n\n  }\n\n  restart() {\n    this.resetBoard();\n  }\n\n  resetBoard() {\n    var circleValues = this.state.circleValues;\n\n    for (var z = 0; z <= 15; z++) {\n      this.changeCircleTo(z, \"nonactive\");\n      circleValues[z] = \"\";\n    }\n\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n\n    this.changeCircleTo(5, \"active\");\n    this.changeCircleTo(6, \"gold\");\n    this.changeCircleTo(10, \"active\");\n\n    for(var t = 0; t <=15; t++) {\n      this.animateBounce(t);\n    }\n\n    this.setState({circleValues: circleValues});\n  }\n\n  //Deselect all selected circles.\n  deselect() {\n    var circleStates = this.state.circleStates;\n\n    for (var z = 0; z <= 15; z++) {\n      if (circleStates[z] === \"selected\") {\n        this.changeCircleTo(z, \"active\");\n      }\n    }\n\n    this.setState({ selected: 0 }); \n  }\n\n  //Handles changing a given circle to a given state.\n  changeCircleTo(i, state) {\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n\n    switch (state) {\n      case \"nonactive\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.nonActive;\n        circleStates[i] = \"nonactive\";\n        break;\n\n      case \"active\":\n        circleColors[i] = myColors.active;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.active;\n        circleStates[i] = \"active\";\n        break;\n\n      case \"selected\":\n        circleColors[i] = myColors.selected;\n        circleTextColors[i] = myColors.background;\n        circleBorderColor[i] = myColors.selected;\n        circleStates[i] = \"selected\";\n        break;\n\n      case \"gold\":\n        circleColors[i] = myColors.nonActive;\n        circleTextColors = myColors.goldText;\n        circleBorderColor[i] = myColors.gold;\n        circleStates[i] = \"gold\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates\n    });\n  }\n\n  animateBounce(i) {\n    var element = document.getElementById(i);\n    element.classList.remove(\"bounce\");\n    element.classList.add(\"bounce\");\n    setTimeout(() => element.classList.remove(\"bounce\"), 400);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    this.animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          this.changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          selected = 0;\n          this.deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        if (selected >= 2) {\n          selected = 0;\n          this.deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          selected = 0;\n          this.deselect();\n        }\n        selected++;\n        this.changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected = 0;\n        this.deselect();\n        break;\n\n      case \"gold\":\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n\n    return (\n      <div className=\"global-width\">\n        <div className=\"space-above-title\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"line-break\"></div>\n        <div className=\"level\">level 0</div>\n        <div className=\"line-break\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.back()} className=\"arrows\">\n            <i className=\"fa fa-arrow-left\"></i>\n          </div>\n          <div className=\"space-between-arrows\"></div>\n          <div onPointerDown={() => this.restart()} className=\"arrows\">\n            <i className=\"fa fa-redo\"></i>\n          </div>\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two adjacent green circles\n            and then select an empty circle adjacent to one of the selected\n            green circles. The new circle's value becomes the sum of the\n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the gold circle with a green\n            circle that has the same number.\n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n        <div className=\"space-above-title\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}