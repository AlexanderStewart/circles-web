{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //Set board\n\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    var selected = 0;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //Handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        console.log(\"selected: \" + selected);\n\n        if (selected >= 2) {\n          deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      default:\n        break;\n    } //Deselect all selected circles\n\n\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n\n      selected = 0;\n    } //Handles changing a given circle to a given state.\n\n\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    return React.createElement(\"div\", {\n      class: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"circles\")), React.createElement(\"div\", {\n      className: \"content-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      onTouchEnd: event => this.processTouch,\n      onMouseUp: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\"))));\n  }\n\n  processTouch(event, i) {\n    event.preventDefault();\n    this.handleTap(i);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","active","circleStates","selected","state","handleTap","bind","i","console","log","changeCircleTo","sum","deselect","z","setState","render","event","processTouch","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Set board\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        console.log(\"selected: \" + selected);\n        if (selected >= 2) {\n          deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      default:\n        break;\n    }\n\n    //Deselect all selected circles\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n      selected = 0;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n\n    return (\n      <div class=\"global-width\">\n        <div class=\"space-above-title\"></div>\n        <div className=\"title-container\">\n          <div className=\"title\">circles</div>\n        </div>\n        <div className=\"content-space\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          onTouchEnd={(event) => this.processTouch}\n          onMouseUp={this.handleTap}\n        />\n        <div className=\"content-space\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/AlexanderStewart/circles-web\"\n            >\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  processTouch(event, i) { \n    event.preventDefault();\n    this.handleTap(i);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}