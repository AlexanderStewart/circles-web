{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //Set board\n\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    circleColors[6] = myColors.gold;\n    var circleTextColors = Array(16).fill(myColors.background); // circleTextColors[5] = myColors.active;\n    // circleTextColors[10] = myColors.active;\n\n    circleTextColors[6] = myColors.goldText;\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    circleStates[6] = \"gold\";\n    var selected = 0;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //Handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        console.log(\"selected: \" + selected);\n\n        if (selected >= 2) {\n          deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      case \"gold\":\n        break;\n\n      default:\n        break;\n    } //Deselect all selected circles\n\n\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n\n      selected = 0;\n    } //Handles changing a given circle to a given state.\n\n\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        case \"gold\":\n          circleColors[i] = myColors.gold;\n          circleStates[i] = \"gold\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    return React.createElement(\"div\", {\n      class: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"circles\")), React.createElement(\"div\", {\n      className: \"content-space-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      onPointerDown: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"How To Play: \"), \"Select any two adjacent green circles and then select an empty circle adjacent to one of them. The new circle's value is the sum of the previously selected circles.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), \"The purpose of the game is to fill in the gold circle with a green circle that has the same number.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","active","gold","circleTextColors","background","goldText","circleStates","selected","state","handleTap","bind","i","console","log","changeCircleTo","sum","deselect","z","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Set board\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    circleColors[6] = myColors.gold;\n\n    var circleTextColors = Array(16).fill(myColors.background);\n    // circleTextColors[5] = myColors.active;\n    // circleTextColors[10] = myColors.active;\n    circleTextColors[6] = myColors.goldText;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    circleStates[6] = \"gold\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        console.log(\"selected: \" + selected);\n        if (selected >= 2) {\n          deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      case \"gold\":\n        break;\n      \n      default:\n        break;\n    }\n\n    //Deselect all selected circles\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n      selected = 0;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        case \"gold\":\n          circleColors[i] = myColors.gold;\n          circleStates[i] = \"gold\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n\n    return (\n      <div class=\"global-width\">\n        <div class=\"space-above-title\"></div>\n        <div className=\"title-container\">\n          <div className=\"title\">circles</div>\n        </div>\n        <div className=\"content-space-a\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two \n            adjacent green circles and then select an empty \n            circle adjacent to one of them. The new circle's \n            value is the sum of the previously selected \n            circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the \n            gold circle with a green circle that has \n            the same number. \n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a className=\"github-link\" href=\"https://github.com/AlexanderStewart/circles-web\">\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}