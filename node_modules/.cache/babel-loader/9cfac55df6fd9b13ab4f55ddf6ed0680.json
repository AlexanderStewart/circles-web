{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    var selected = 0;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(i) {\n    console.log(\"circle \" + i + \" clicked\");\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //These statements deselect everything if selected is greater than 2\n\n    if (selected > 2) {\n      for (var i = 0; i <= 15; i++) {\n        if (circleStates[i] === \"selected\") {\n          changeCircleTo(i, \"active\");\n        }\n      }\n    } //Handles the main logic of the game alongside /src/logic.js\n\n\n    switch (circleStates[i]) {\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n        }\n\n        break;\n\n      case \"active\":\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      case \"selected\":\n        selected--;\n        changeCircleTo(i, \"active\");\n        break;\n\n      default:\n        break;\n    } //Handles changing a given circle to a given state.\n\n\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","active","circleStates","selected","state","handleClick","bind","i","console","log","changeCircleTo","sum","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(i) {\n    console.log(\"circle \" + i + \" clicked\");\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //These statements deselect everything if selected is greater than 2\n    if(selected > 2) {\n      for(var i = 0; i <= 15; i++) {\n        if(circleStates[i] === \"selected\") {\n          changeCircleTo(i, \"active\"); \n        }\n      }\n    }\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n        }\n        break;\n\n      case \"active\":\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      case \"selected\":\n        selected--;\n        changeCircleTo(i, \"active\");\n        break;\n\n      default:\n        break;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n\n    return (\n      <div className=\"app\">\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}