{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mac/Desktop/circles-web/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";//Imports.\nimport\"./style/index.css\";import Board from\"./components/Board\";import{myColors}from\"./style/colors.js\";import{selectedBeside}from\"./logic/checkBeside.js\";import{selectedNums}from\"./logic/selectedNums.js\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));var circleValues=Array(16).fill(null);circleValues[5]=1;circleValues[10]=2;var circleColors=Array(16).fill(myColors.nonActive);circleColors[5]=myColors.active;circleColors[10]=myColors.active;var circleStates=Array(16).fill(\"nonactive\");circleStates[5]=\"active\";circleStates[10]=\"active\";var selected=0;_this.state={circleValues:circleValues,circleColors:circleColors,circleStates:circleStates,selected:selected};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"handleClick\",value:function handleClick(i){console.log(\"circle \"+i+\" clicked\");var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;var circleStates=this.state.circleStates;var selected=this.state.selected;//Handles the main logic of the game alongside /src/logic.js\nswitch(circleStates[i]){case\"nonactive\":if(selected===2&&selectedBeside(i,circleStates)){changeCircleTo(i,\"active\");var sum=selectedNums(circleStates,circleValues);circleValues[i]=sum;}break;case\"active\":selected++;changeCircleTo(i,\"selected\");break;case\"selected\":selected--;changeCircleTo(i,\"active\");break;default:break;}//Handles changing a given circle to a given state.\nfunction changeCircleTo(i,state){switch(state){case\"nonactive\":circleColors[i]=myColors.nonActive;circleStates[i]=\"nonactive\";break;case\"active\":circleColors[i]=myColors.active;circleStates[i]=\"active\";break;case\"selected\":circleColors[i]=myColors.selected;circleStates[i]=\"selected\";break;default:break;}}this.setState({circleValues:circleValues,circleColors:circleColors,circleStates:circleStates,selected:selected});}},{key:\"render\",value:function render(){var circleValues=this.state.circleValues;var circleColors=this.state.circleColors;return React.createElement(\"div\",{className:\"app\"},React.createElement(Board,{circleValues:circleValues,circleColors:circleColors,onClick:this.handleClick}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","App","props","circleValues","Array","fill","circleColors","nonActive","active","circleStates","selected","state","handleClick","bind","i","console","log","changeCircleTo","sum","setState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(i) {\n    console.log(\"circle \" + i + \" clicked\");\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n          \n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n        }\n        break;\n\n      case \"active\":\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      case \"selected\":\n        selected--;\n        changeCircleTo(i, \"active\");\n        break;\n\n      default:\n        break;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n\n    return (\n      <div className=\"app\">\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}