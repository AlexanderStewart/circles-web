{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/circles-web/src/App.js\";\nimport React from \"react\"; //Imports.\n\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //Set board.\n\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    circleColors[6] = myColors.nonActive;\n    var circleTextColors = Array(16).fill(myColors.background);\n    circleTextColors[6] = myColors.goldText;\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    circleBorderColor[5] = myColors.active;\n    circleBorderColor[10] = myColors.active;\n    circleBorderColor[6] = myColors.gold;\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    circleStates[6] = \"gold\";\n    var selected = 0;\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    };\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  back() {\n    console.log(\"back\");\n  }\n\n  restart() {\n    console.log(\"restart\");\n  }\n\n  forward() {\n    console.log(\"forward\");\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n    animateBounce(i);\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected; //Handles the main logic of the game alongside /src/logic.js\n\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n          deselect();\n        }\n\n        break;\n      //Active circle tapped.\n\n      case \"active\":\n        console.log(\"selected: \" + selected);\n\n        if (selected >= 2) {\n          deselect();\n        }\n\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n      //Selected circle tapped.\n\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      case \"gold\":\n        break;\n\n      default:\n        break;\n    } //Deselect all selected circles\n\n\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n\n      selected = 0;\n    } //Handles changing a given circle to a given state.\n\n\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        case \"gold\":\n          circleColors[i] = myColors.nonActive;\n          circleTextColors = myColors.goldText;\n          circleBorderColor[i] = myColors.gold;\n          circleStates[i] = \"gold\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    function animateBounce(i) {\n      var element = document.getElementById(i);\n      element.classList.remove(\"bounce\");\n      element.classList.add(\"bounce\");\n      setTimeout(() => element.classList.remove(\"bounce\"), 400);\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n    return React.createElement(\"div\", {\n      className: \"global-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"circles\"), React.createElement(\"div\", {\n      className: \"content-space-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Board, {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      onPointerDown: this.handleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"arrows-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onPointerDown: () => this.back(),\n      className: \"arrows back-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))), React.createElement(\"img\", {\n      onPointerDown: () => this.back(),\n      className: \"arrows back-arrow\",\n      src: require(\"./images/back.png\"),\n      alt: \"back-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      onPointerDown: () => this.restart(),\n      className: \"arrows\",\n      src: require(\"./images/restart.png\"),\n      alt: \"restart-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      onPointerDown: () => this.forward(),\n      className: \"arrows forward-arrow\",\n      src: require(\"./images/forward.png\"),\n      alt: \"forward-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line-break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-space-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"How To Play: \"), \"Select any two adjacent green circles and then select an empty circle adjacent to one of the selected circles. The new circle's value becomes the sum of the previously selected circles.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), \"The purpose of the game is to fill in the gold circle with a green circle that has the same number.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"github-link-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"find the code here: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      className: \"github-link\",\n      href: \"https://github.com/AlexanderStewart/circles-web\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"github.com/alexanderstewart/circles-web\")), React.createElement(\"div\", {\n      className: \"space-above-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Desktop/circles-web/src/App.js"],"names":["React","Board","myColors","selectedBeside","selectedNums","FontAwesomeIcon","faCoffee","App","Component","constructor","props","circleValues","Array","fill","circleColors","nonActive","active","circleTextColors","background","goldText","circleBorderColor","gold","circleStates","selected","state","handleTap","bind","back","console","log","restart","forward","i","animateBounce","changeCircleTo","sum","deselect","z","element","document","getElementById","classList","remove","add","setTimeout","setState","render","require"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n//Imports.\nimport \"./style/index.scss\";\nimport \"./style/board.scss\";\nimport \"./style/bounce.css\";\nimport Board from \"./components/Board\";\nimport { myColors } from \"./style/colors.js\";\nimport { selectedBeside } from \"./logic/checkBeside.js\";\nimport { selectedNums } from \"./logic/selectedNums.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Set board.\n    var circleValues = Array(16).fill(null);\n    circleValues[5] = 1;\n    circleValues[10] = 2;\n    circleValues[6] = 3;\n\n    var circleColors = Array(16).fill(myColors.nonActive);\n    circleColors[5] = myColors.active;\n    circleColors[10] = myColors.active;\n    circleColors[6] = myColors.nonActive;\n\n    var circleTextColors = Array(16).fill(myColors.background);\n    circleTextColors[6] = myColors.goldText;\n\n    var circleBorderColor = Array(16).fill(myColors.nonActive);\n    circleBorderColor[5] = myColors.active;\n    circleBorderColor[10] = myColors.active;\n    circleBorderColor[6] = myColors.gold;\n\n    var circleStates = Array(16).fill(\"nonactive\");\n    circleStates[5] = \"active\";\n    circleStates[10] = \"active\";\n    circleStates[6] = \"gold\";\n\n    var selected = 0;\n\n    this.state = {\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    };\n\n    this.handleTap = this.handleTap.bind(this);\n  }\n\n  back() {\n    console.log(\"back\");\n  }\n\n  restart() {\n    console.log(\"restart\");\n  }\n\n  forward() {\n    console.log(\"forward\");\n  }\n\n  handleTap(i) {\n    console.log(\"circle \" + i + \" tapped\");\n\n    animateBounce(i);\n\n    var circleValues = this.state.circleValues;\n    var circleColors = this.state.circleColors;\n    var circleTextColors = this.state.circleTextColors;\n    var circleBorderColor = this.state.circleBorderColor;\n    var circleStates = this.state.circleStates;\n    var selected = this.state.selected;\n\n    //Handles the main logic of the game alongside /src/logic.js\n    switch (circleStates[i]) {\n      //Nonactive circle tapped.\n      case \"nonactive\":\n        if (selected === 2 && selectedBeside(i, circleStates)) {\n          changeCircleTo(i, \"active\");\n\n          var sum = selectedNums(circleStates, circleValues);\n          circleValues[i] = sum;\n\n          deselect();\n        }\n        break;\n\n      //Active circle tapped.\n      case \"active\":\n        console.log(\"selected: \" + selected);\n        if (selected >= 2) {\n          deselect();\n        }\n        if (!selectedBeside(i, circleStates)) {\n          deselect();\n        }\n        selected++;\n        changeCircleTo(i, \"selected\");\n        break;\n\n      //Selected circle tapped.\n      case \"selected\":\n        selected--;\n        deselect();\n        break;\n\n      case \"gold\":\n        break;\n      \n      default:\n        break;\n    }\n\n    //Deselect all selected circles\n    function deselect() {\n      for (var z = 0; z <= 15; z++) {\n        if (circleStates[z] === \"selected\") {\n          changeCircleTo(z, \"active\");\n        }\n      }\n      selected = 0;\n    }\n\n    //Handles changing a given circle to a given state.\n    function changeCircleTo(i, state) {\n      switch (state) {\n        case \"nonactive\":\n          circleColors[i] = myColors.nonActive;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.nonActive;\n          circleStates[i] = \"nonactive\";\n          break;\n\n        case \"active\":\n          circleColors[i] = myColors.active;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.active;\n          circleStates[i] = \"active\";\n          break;\n\n        case \"selected\":\n          circleColors[i] = myColors.selected;\n          circleTextColors = myColors.background;\n          circleBorderColor[i] = myColors.selected;\n          circleStates[i] = \"selected\";\n          break;\n\n        case \"gold\":\n          circleColors[i] = myColors.nonActive;\n          circleTextColors = myColors.goldText;\n          circleBorderColor[i] = myColors.gold;\n          circleStates[i] = \"gold\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    function animateBounce(i) {\n      var element = document.getElementById(i);\n      element.classList.remove(\"bounce\");\n      element.classList.add(\"bounce\");\n      setTimeout(() => element.classList.remove(\"bounce\"), 400);\n    }\n\n    this.setState({\n      circleValues: circleValues,\n      circleColors: circleColors,\n      circleTextColors: circleTextColors,\n      circleBorderColor: circleBorderColor,\n      circleStates: circleStates,\n      selected: selected\n    });\n  }\n\n  render() {\n    const circleValues = this.state.circleValues;\n    const circleColors = this.state.circleColors;\n    const circleTextColors = this.state.circleTextColors;\n    const circleBorderColor = this.state.circleBorderColor;\n\n    return (\n      <div className=\"global-width\">\n        <div className=\"space-above-title\"></div>\n        <div className=\"title\">circles</div>\n        <div className=\"content-space-a\"></div>\n        <Board\n          circleValues={circleValues}\n          circleColors={circleColors}\n          circleTextColors={circleTextColors}\n          circleBorderColor={circleBorderColor}\n          onPointerDown={this.handleTap}\n        />\n        <div className=\"content-space-a\"></div>\n        <div className=\"arrows-container\">\n          <div onPointerDown={() => this.back()} className=\"arrows back-arrow\" >\n            <div><i className=\"fas fa-arrow-left\"></i></div>\n          </div>\n          <img onPointerDown={() => this.back()} className=\"arrows back-arrow\" src={require(\"./images/back.png\")} alt=\"back-arrow\" />\n          <img onPointerDown={() => this.restart()} className=\"arrows\" src={require(\"./images/restart.png\")} alt=\"restart-arrow\" />\n          <img onPointerDown={() => this.forward()} className=\"arrows forward-arrow\" src={require(\"./images/forward.png\")} alt=\"forward-arrow\" />\n        </div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"line-break\"></div>\n        <div className=\"content-space-b\"></div>\n        <div className=\"bottom-text-container\">\n          <div className=\"github-link-text\">\n            <strong>How To Play: </strong>Select any two \n            adjacent green circles and then select an empty \n            circle adjacent to one of the selected circles. \n            The new circle's value becomes the sum of the \n            previously selected circles.\n            <br></br>\n            <br></br>\n            The purpose of the game is to fill in the \n            gold circle with a green circle that has \n            the same number. \n          </div>\n          <br></br>\n          <div className=\"github-link-text\">\n            find the code here: <br></br>\n            <a className=\"github-link\" href=\"https://github.com/AlexanderStewart/circles-web\">\n              github.com/alexanderstewart/circles-web\n            </a>\n          </div>\n          <div className=\"space-above-title\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}